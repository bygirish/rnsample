Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var Send = function (_React$Component) {
  babelHelpers.inherits(Send, _React$Component);

  function Send() {
    babelHelpers.classCallCheck(this, Send);
    return babelHelpers.possibleConstructorReturn(this, (Send.__proto__ || Object.getPrototypeOf(Send)).apply(this, arguments));
  }

  babelHelpers.createClass(Send, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      if (this.props.text.trim().length > 0) {
        return _react2.default.createElement(
          _reactNative.TouchableOpacity,
          {
            style: [styles.container, this.props.containerStyle],
            onPress: function onPress() {
              _this2.props.onSend({ text: _this2.props.text.trim() }, true);
            },
            accessibilityTraits: 'button'
          },
          _react2.default.createElement(
            _reactNative.View,
            null,
            this.props.children || _react2.default.createElement(
              _reactNative.Text,
              { style: [styles.text, this.props.textStyle] },
              this.props.label
            )
          )
        );
      }
      return _react2.default.createElement(_reactNative.View, null);
    }
  }]);
  return Send;
}(_react2.default.Component);

exports.default = Send;


var styles = _reactNative.StyleSheet.create({
  container: {
    height: 44,
    justifyContent: 'flex-end'
  },
  text: {
    color: '#0084ff',
    fontWeight: '600',
    fontSize: 17,
    backgroundColor: 'transparent',
    marginBottom: 12,
    marginLeft: 10,
    marginRight: 10
  }
});

Send.defaultProps = {
  text: '',
  onSend: function onSend() {},
  label: 'Send',
  containerStyle: {},
  textStyle: {}
};

Send.propTypes = {
  text: _propTypes2.default.string,
  onSend: _propTypes2.default.func,
  label: _propTypes2.default.string,
  containerStyle: _reactNative.ViewPropTypes.style,
  textStyle: _reactNative.Text.propTypes.style
};