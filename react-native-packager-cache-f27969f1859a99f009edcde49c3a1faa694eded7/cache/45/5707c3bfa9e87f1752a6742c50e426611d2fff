Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _App = require('./App');

var _App2 = babelHelpers.interopRequireDefault(_App);

var _configureStore = require('./configureStore');

var _configureStore2 = babelHelpers.interopRequireDefault(_configureStore);

var _reduxPersist = require('redux-persist');

var _reactNative = require('react-native');

var _ewloadingindicator = require('./components/ewloadingindicator/ewloadingindicator');

var _ewloadingindicator2 = babelHelpers.interopRequireDefault(_ewloadingindicator);

var FILE_NAME = "setup.js : ";

function setup() {
  var Root = function (_Component) {
    babelHelpers.inherits(Root, _Component);

    function Root() {
      babelHelpers.classCallCheck(this, Root);


      console.log(FILE_NAME + "In constructor");

      var _this = babelHelpers.possibleConstructorReturn(this, (Root.__proto__ || Object.getPrototypeOf(Root)).call(this));

      _this.state = {
        isLoading: false,
        store: (0, _configureStore2.default)(function () {
          return _this.setState({ isLoading: false });
        }),
        rehydrated: false
      };
      return _this;
    }

    babelHelpers.createClass(Root, [{
      key: 'componentDidMount',
      value: function componentDidMount() {

        console.log(FILE_NAME + "In componentDidMount");
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        var _this2 = this;

        console.log(FILE_NAME + "In componentWillMount method");

        (0, _reduxPersist.persistStore)(this.state.store, { storage: _reactNative.AsyncStorage }, function () {
          _this2.setState({ rehydrated: true });
        });
      }
    }, {
      key: 'render',
      value: function render() {

        if (!this.state.rehydrated) {
          return _react2.default.createElement(_ewloadingindicator2.default, null);
        }

        return _react2.default.createElement(
          _reactRedux.Provider,
          { store: this.state.store },
          _react2.default.createElement(_App2.default, null)
        );
      }
    }]);
    return Root;
  }(_react.Component);

  return Root;
}

exports.default = setup;