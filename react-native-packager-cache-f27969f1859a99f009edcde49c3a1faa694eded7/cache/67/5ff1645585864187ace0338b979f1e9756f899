Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require('react-native');

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _nativeBase = require('native-base');

var _utils = require('../../utils');

var _ewh1text = require('../ewh1text/ewh1text');

var _ewh1text2 = babelHelpers.interopRequireDefault(_ewh1text);

var _ewh2lighttext = require('../ewh2lighttext/ewh2lighttext');

var _ewh2lighttext2 = babelHelpers.interopRequireDefault(_ewh2lighttext);

var _ewh3lighttext = require('../ewh3lighttext/ewh3lighttext');

var _ewh3lighttext2 = babelHelpers.interopRequireDefault(_ewh3lighttext);

var _ewnetworkimage = require('../ewnetworkimage/ewnetworkimage');

var _ewnetworkimage2 = babelHelpers.interopRequireDefault(_ewnetworkimage);

var _ewbar = require('../ewbar/ewbar');

var _ewbar2 = babelHelpers.interopRequireDefault(_ewbar);

var FILE_NAME = "EwSupervisorInfo.js : ";

exports.default = EwSupervisorInfo = function EwSupervisorInfo(_ref) {
  var info = _ref.info;


  console.log("Supervisor Information is - ", info);

  var imageUrl = info.imageUrl;

  var textStyle = styles.textStyle;

  var formattedDate = null;

  if (info.datetime != null) {

    var appliedDate = formatDateReceivedFromServer(info.datetime);
    var formattedDate = customFormatForDate(appliedDate);
  }

  return _react2.default.createElement(
    _reactNative.View,
    { style: { marginBottom: 10, marginTop: 5, backgroundColor: 'transparent', alignSelf: 'stretch' } },
    _react2.default.createElement(
      _nativeBase.Text,
      { style: { marginLeft: 10, marginTop: 10, marginBottom: 5, alignSelf: 'auto', color: 'black' } },
      'Approval By'
    ),
    _react2.default.createElement(_ewbar2.default, null),
    _react2.default.createElement(
      _reactNative.View,
      { style: { flexDirection: 'row', alignSelf: 'stretch', marginTop: 5, marginBottom: 5, justifyContent: "center" } },
      _react2.default.createElement(
        _reactNative.View,
        { style: { flex: 2, flexDirection: 'column', marginLeft: 10, alignItems: 'flex-start', justifyContent: 'flex-start' } },
        _react2.default.createElement(_ewh1text2.default, {
          text: info.name
        }),
        _react2.default.createElement(_ewh2lighttext2.default, {
          text: info.designation,
          customStyle: textStyle
        }),
        formattedDate != null ? _react2.default.createElement(_ewh3lighttext2.default, {
          text: formattedDate,
          customStyle: textStyle
        }) : null
      ),
      _react2.default.createElement(
        _reactNative.View,
        { style: { flex: 1, justifyContent: 'flex-end', alignItems: 'center' } },
        _react2.default.createElement(_ewnetworkimage2.default, { networkUrl: info.imageUrl })
      )
    ),
    _react2.default.createElement(_ewbar2.default, null)
  );
};

function formatDateReceivedFromServer(date) {

  console.log(FILE_NAME + "In formatDateReceivedFromServer method");

  return date.replace(/-/g, "/").substr(0, date.length - 5);
}

function customFormatForDate(date) {

  console.log(FILE_NAME + "In customFormatForDate method");

  currentDate = new Date(date);

  var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
  var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  var date = currentDate.getDate();
  var dayName = days[currentDate.getDay()];
  var monthName = monthNames[currentDate.getMonth()];
  var year = currentDate.getFullYear();

  formattedDate = dayName + ', ' + date + " " + monthName + " " + year + " - " + fomartTime12Hour(currentDate);
  return formattedDate;
}

function fomartTime12Hour(time_24) {

  console.log(FILE_NAME + "In fomartTime12Hour method");

  var hours = time_24.getHours() % 12;
  var minutes = time_24.getMinutes();

  if (hours === 0) hours = 12;
  return (hours < 10 ? '0' : '') + hours + ":" + (minutes < 10 ? '0' : '') + minutes + (time_24.getHours() < 12 ? 'am' : 'pm');
}

var styles = {

  textStyle: {
    marginTop: 5

  }

};