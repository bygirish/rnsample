Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var ProgressBarNB = function (_Component) {
  babelHelpers.inherits(ProgressBarNB, _Component);

  function ProgressBarNB() {
    babelHelpers.classCallCheck(this, ProgressBarNB);
    return babelHelpers.possibleConstructorReturn(this, (ProgressBarNB.__proto__ || Object.getPrototypeOf(ProgressBarNB)).apply(this, arguments));
  }

  babelHelpers.createClass(ProgressBarNB, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var getColor = function getColor() {
        if (_this2.props.color) {
          return _this2.props.color;
        } else if (_this2.props.inverse) {
          return _this2.getTheme().inverseProgressColor;
        }

        return _this2.getTheme().defaultProgressColor;
      };

      return _react2.default.createElement(_reactNative.ProgressViewIOS, {
        progress: this.props.progress ? this.props.progress / 100 : 0.5,
        progressTintColor: getColor()
      });
    }
  }]);
  return ProgressBarNB;
}(_react.Component);

exports.default = ProgressBarNB;