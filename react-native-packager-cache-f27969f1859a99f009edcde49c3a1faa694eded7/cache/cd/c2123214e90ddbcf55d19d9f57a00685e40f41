Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _appstyleguide = require('../../../appstyleguide/appstyleguide');

var appstyleguide = babelHelpers.interopRequireWildcard(_appstyleguide);


var timelineStyle = {

  marginLeft: 14,
  width: 2
};

var EwTimeline = function (_Component) {
  babelHelpers.inherits(EwTimeline, _Component);

  function EwTimeline(props) {
    babelHelpers.classCallCheck(this, EwTimeline);

    var _this = babelHelpers.possibleConstructorReturn(this, (EwTimeline.__proto__ || Object.getPrototypeOf(EwTimeline)).call(this, props));

    _this.state = {
      maxHeight: 0
    };
    return _this;
  }

  babelHelpers.createClass(EwTimeline, [{
    key: 'getHeight',
    value: function getHeight(event) {
      this.setState({
        maxHeight: event.nativeEvent.layout.height / 2
      });
    }
  }, {
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        _reactNative.View,
        { style: { flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center' } },
        _react2.default.createElement(
          _reactNative.View,
          { style: { alignSelf: 'flex-start' } },
          this.renderBarStartView(),
          _react2.default.createElement(
            _reactNative.View,
            { style: { marginLeft: 10, width: 10, height: 10, borderRadius: 20, borderWidth: 1, borderColor: appstyleguide.APP_LIGHT_BLUE, backgroundColor: 'transparent', alignSelf: 'center', justifyContent: 'center', alignItems: 'center' } },
            _react2.default.createElement(_reactNative.View, { style: { width: 5, height: 5, borderRadius: 10, backgroundColor: appstyleguide.APP_LIGHT_BLUE } })
          ),
          this.renderBarEndView()
        ),
        _react2.default.createElement(
          _reactNative.View,
          {
            style: { marginBottom: 8, marginLeft: 10, marginRight: 10, paddingTop: 10, backgroundColor: 'white' },
            onLayout: this.getHeight.bind(this)
          },
          this.props.children
        )
      );
    }
  }, {
    key: 'renderBarStartView',
    value: function renderBarStartView() {

      if (this.props.timeline == 'start' || this.props.timeline == 'startandend') {

        return _react2.default.createElement(_reactNative.View, { style: babelHelpers.extends({}, timelineStyle, { height: this.state.maxHeight, backgroundColor: 'transparent' }) });
      } else {

        return _react2.default.createElement(_reactNative.View, { style: babelHelpers.extends({}, timelineStyle, { height: this.state.maxHeight, backgroundColor: appstyleguide.APP_LIGHT_BLUE }) });
      }
    }
  }, {
    key: 'renderBarEndView',
    value: function renderBarEndView() {

      if (this.props.timeline == 'end' || this.props.timeline == 'startandend') {

        return _react2.default.createElement(_reactNative.View, { style: babelHelpers.extends({}, timelineStyle, { height: this.state.maxHeight, backgroundColor: 'transparent' }) });
      } else {

        return _react2.default.createElement(_reactNative.View, { style: babelHelpers.extends({}, timelineStyle, { height: this.state.maxHeight, backgroundColor: appstyleguide.APP_LIGHT_BLUE }) });
      }
    }
  }]);
  return EwTimeline;
}(_react.Component);

exports.default = EwTimeline;